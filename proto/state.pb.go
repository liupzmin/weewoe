// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/state.proto

package state

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Command struct {
	ID                   int64    `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Command) Reset()         { *m = Command{} }
func (m *Command) String() string { return proto.CompactTextString(m) }
func (*Command) ProtoMessage()    {}
func (*Command) Descriptor() ([]byte, []int) {
	return fileDescriptor_0493a22f06b3cb67, []int{0}
}

func (m *Command) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Command.Unmarshal(m, b)
}
func (m *Command) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Command.Marshal(b, m, deterministic)
}
func (m *Command) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Command.Merge(m, src)
}
func (m *Command) XXX_Size() int {
	return xxx_messageInfo_Command.Size(m)
}
func (m *Command) XXX_DiscardUnknown() {
	xxx_messageInfo_Command.DiscardUnknown(m)
}

var xxx_messageInfo_Command proto.InternalMessageInfo

func (m *Command) GetID() int64 {
	if m != nil {
		return m.ID
	}
	return 0
}

type ProcessCollection struct {
	List                 []*ProcessState `protobuf:"bytes,1,rep,name=List,proto3" json:"List,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *ProcessCollection) Reset()         { *m = ProcessCollection{} }
func (m *ProcessCollection) String() string { return proto.CompactTextString(m) }
func (*ProcessCollection) ProtoMessage()    {}
func (*ProcessCollection) Descriptor() ([]byte, []int) {
	return fileDescriptor_0493a22f06b3cb67, []int{1}
}

func (m *ProcessCollection) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProcessCollection.Unmarshal(m, b)
}
func (m *ProcessCollection) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProcessCollection.Marshal(b, m, deterministic)
}
func (m *ProcessCollection) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProcessCollection.Merge(m, src)
}
func (m *ProcessCollection) XXX_Size() int {
	return xxx_messageInfo_ProcessCollection.Size(m)
}
func (m *ProcessCollection) XXX_DiscardUnknown() {
	xxx_messageInfo_ProcessCollection.DiscardUnknown(m)
}

var xxx_messageInfo_ProcessCollection proto.InternalMessageInfo

func (m *ProcessCollection) GetList() []*ProcessState {
	if m != nil {
		return m.List
	}
	return nil
}

type PortCollection struct {
	List                 []*PortState `protobuf:"bytes,1,rep,name=List,proto3" json:"List,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *PortCollection) Reset()         { *m = PortCollection{} }
func (m *PortCollection) String() string { return proto.CompactTextString(m) }
func (*PortCollection) ProtoMessage()    {}
func (*PortCollection) Descriptor() ([]byte, []int) {
	return fileDescriptor_0493a22f06b3cb67, []int{2}
}

func (m *PortCollection) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PortCollection.Unmarshal(m, b)
}
func (m *PortCollection) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PortCollection.Marshal(b, m, deterministic)
}
func (m *PortCollection) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PortCollection.Merge(m, src)
}
func (m *PortCollection) XXX_Size() int {
	return xxx_messageInfo_PortCollection.Size(m)
}
func (m *PortCollection) XXX_DiscardUnknown() {
	xxx_messageInfo_PortCollection.DiscardUnknown(m)
}

var xxx_messageInfo_PortCollection proto.InternalMessageInfo

func (m *PortCollection) GetList() []*PortState {
	if m != nil {
		return m.List
	}
	return nil
}

type Process struct {
	Name                 string   `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`
	Host                 string   `protobuf:"bytes,2,opt,name=Host,proto3" json:"Host,omitempty"`
	Path                 string   `protobuf:"bytes,3,opt,name=Path,proto3" json:"Path,omitempty"`
	Ports                []string `protobuf:"bytes,4,rep,name=Ports,proto3" json:"Ports,omitempty"`
	PIDFile              string   `protobuf:"bytes,5,opt,name=PIDFile,proto3" json:"PIDFile,omitempty"`
	Group                string   `protobuf:"bytes,6,opt,name=Group,proto3" json:"Group,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Process) Reset()         { *m = Process{} }
func (m *Process) String() string { return proto.CompactTextString(m) }
func (*Process) ProtoMessage()    {}
func (*Process) Descriptor() ([]byte, []int) {
	return fileDescriptor_0493a22f06b3cb67, []int{3}
}

func (m *Process) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Process.Unmarshal(m, b)
}
func (m *Process) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Process.Marshal(b, m, deterministic)
}
func (m *Process) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Process.Merge(m, src)
}
func (m *Process) XXX_Size() int {
	return xxx_messageInfo_Process.Size(m)
}
func (m *Process) XXX_DiscardUnknown() {
	xxx_messageInfo_Process.DiscardUnknown(m)
}

var xxx_messageInfo_Process proto.InternalMessageInfo

func (m *Process) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Process) GetHost() string {
	if m != nil {
		return m.Host
	}
	return ""
}

func (m *Process) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

func (m *Process) GetPorts() []string {
	if m != nil {
		return m.Ports
	}
	return nil
}

func (m *Process) GetPIDFile() string {
	if m != nil {
		return m.PIDFile
	}
	return ""
}

func (m *Process) GetGroup() string {
	if m != nil {
		return m.Group
	}
	return ""
}

type ProcessState struct {
	Base                 *Process `protobuf:"bytes,1,opt,name=Base,proto3" json:"Base,omitempty"`
	State                int64    `protobuf:"varint,2,opt,name=State,proto3" json:"State,omitempty"`
	StartTime            int64    `protobuf:"varint,3,opt,name=StartTime,proto3" json:"StartTime,omitempty"`
	Timestamp            int64    `protobuf:"varint,4,opt,name=Timestamp,proto3" json:"Timestamp,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ProcessState) Reset()         { *m = ProcessState{} }
func (m *ProcessState) String() string { return proto.CompactTextString(m) }
func (*ProcessState) ProtoMessage()    {}
func (*ProcessState) Descriptor() ([]byte, []int) {
	return fileDescriptor_0493a22f06b3cb67, []int{4}
}

func (m *ProcessState) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProcessState.Unmarshal(m, b)
}
func (m *ProcessState) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProcessState.Marshal(b, m, deterministic)
}
func (m *ProcessState) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProcessState.Merge(m, src)
}
func (m *ProcessState) XXX_Size() int {
	return xxx_messageInfo_ProcessState.Size(m)
}
func (m *ProcessState) XXX_DiscardUnknown() {
	xxx_messageInfo_ProcessState.DiscardUnknown(m)
}

var xxx_messageInfo_ProcessState proto.InternalMessageInfo

func (m *ProcessState) GetBase() *Process {
	if m != nil {
		return m.Base
	}
	return nil
}

func (m *ProcessState) GetState() int64 {
	if m != nil {
		return m.State
	}
	return 0
}

func (m *ProcessState) GetStartTime() int64 {
	if m != nil {
		return m.StartTime
	}
	return 0
}

func (m *ProcessState) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

type PortState struct {
	Base                 *Process `protobuf:"bytes,1,opt,name=Base,proto3" json:"Base,omitempty"`
	States               []*Port  `protobuf:"bytes,2,rep,name=States,proto3" json:"States,omitempty"`
	Timestamp            int64    `protobuf:"varint,3,opt,name=Timestamp,proto3" json:"Timestamp,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PortState) Reset()         { *m = PortState{} }
func (m *PortState) String() string { return proto.CompactTextString(m) }
func (*PortState) ProtoMessage()    {}
func (*PortState) Descriptor() ([]byte, []int) {
	return fileDescriptor_0493a22f06b3cb67, []int{5}
}

func (m *PortState) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PortState.Unmarshal(m, b)
}
func (m *PortState) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PortState.Marshal(b, m, deterministic)
}
func (m *PortState) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PortState.Merge(m, src)
}
func (m *PortState) XXX_Size() int {
	return xxx_messageInfo_PortState.Size(m)
}
func (m *PortState) XXX_DiscardUnknown() {
	xxx_messageInfo_PortState.DiscardUnknown(m)
}

var xxx_messageInfo_PortState proto.InternalMessageInfo

func (m *PortState) GetBase() *Process {
	if m != nil {
		return m.Base
	}
	return nil
}

func (m *PortState) GetStates() []*Port {
	if m != nil {
		return m.States
	}
	return nil
}

func (m *PortState) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

type Port struct {
	Number               string   `protobuf:"bytes,1,opt,name=Number,proto3" json:"Number,omitempty"`
	State                int64    `protobuf:"varint,2,opt,name=State,proto3" json:"State,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Port) Reset()         { *m = Port{} }
func (m *Port) String() string { return proto.CompactTextString(m) }
func (*Port) ProtoMessage()    {}
func (*Port) Descriptor() ([]byte, []int) {
	return fileDescriptor_0493a22f06b3cb67, []int{6}
}

func (m *Port) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Port.Unmarshal(m, b)
}
func (m *Port) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Port.Marshal(b, m, deterministic)
}
func (m *Port) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Port.Merge(m, src)
}
func (m *Port) XXX_Size() int {
	return xxx_messageInfo_Port.Size(m)
}
func (m *Port) XXX_DiscardUnknown() {
	xxx_messageInfo_Port.DiscardUnknown(m)
}

var xxx_messageInfo_Port proto.InternalMessageInfo

func (m *Port) GetNumber() string {
	if m != nil {
		return m.Number
	}
	return ""
}

func (m *Port) GetState() int64 {
	if m != nil {
		return m.State
	}
	return 0
}

func init() {
	proto.RegisterType((*Command)(nil), "state.Command")
	proto.RegisterType((*ProcessCollection)(nil), "state.ProcessCollection")
	proto.RegisterType((*PortCollection)(nil), "state.PortCollection")
	proto.RegisterType((*Process)(nil), "state.Process")
	proto.RegisterType((*ProcessState)(nil), "state.ProcessState")
	proto.RegisterType((*PortState)(nil), "state.PortState")
	proto.RegisterType((*Port)(nil), "state.Port")
}

func init() { proto.RegisterFile("proto/state.proto", fileDescriptor_0493a22f06b3cb67) }

var fileDescriptor_0493a22f06b3cb67 = []byte{
	// 378 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x52, 0x41, 0x4b, 0xeb, 0x40,
	0x10, 0x7e, 0x9b, 0xa4, 0x29, 0x99, 0x3e, 0xc2, 0xeb, 0xbe, 0xc7, 0x63, 0x15, 0x0f, 0x25, 0x0a,
	0xe6, 0x54, 0xa5, 0x8a, 0x27, 0x0f, 0x62, 0x83, 0x5a, 0x90, 0x12, 0xb6, 0xfe, 0x81, 0x6d, 0x0d,
	0x18, 0x68, 0xba, 0x65, 0x77, 0xfb, 0x0f, 0xbc, 0x09, 0xfe, 0x66, 0xd9, 0xd9, 0xb4, 0x4d, 0xc4,
	0x83, 0x9e, 0x32, 0xdf, 0x37, 0xdf, 0xcc, 0x7e, 0x33, 0x19, 0xe8, 0xaf, 0x95, 0x34, 0xf2, 0x4c,
	0x1b, 0x61, 0x8a, 0x21, 0xc6, 0xb4, 0x83, 0x20, 0x39, 0x80, 0xee, 0x58, 0x56, 0x95, 0x58, 0x3d,
	0xd3, 0x18, 0xbc, 0x49, 0xc6, 0xc8, 0x80, 0xa4, 0x3e, 0xf7, 0x26, 0x59, 0x72, 0x0d, 0xfd, 0x5c,
	0xc9, 0x45, 0xa1, 0xf5, 0x58, 0x2e, 0x97, 0xc5, 0xc2, 0x94, 0x72, 0x45, 0x4f, 0x21, 0x78, 0x2c,
	0xb5, 0x61, 0x64, 0xe0, 0xa7, 0xbd, 0xd1, 0xdf, 0xa1, 0x6b, 0x59, 0xeb, 0x66, 0x16, 0x70, 0x14,
	0x24, 0x57, 0x10, 0xe7, 0x52, 0x99, 0x46, 0xe9, 0x49, 0xab, 0xf4, 0xcf, 0xb6, 0x54, 0x2a, 0xd3,
	0xac, 0x7b, 0x23, 0xd0, 0xad, 0xdb, 0x51, 0x0a, 0xc1, 0x54, 0x54, 0x05, 0x7a, 0x8a, 0x38, 0xc6,
	0x96, 0x7b, 0x90, 0xda, 0x30, 0xcf, 0x71, 0x36, 0xb6, 0x5c, 0x2e, 0xcc, 0x0b, 0xf3, 0x1d, 0x67,
	0x63, 0xfa, 0x0f, 0x3a, 0xb6, 0xb5, 0x66, 0xc1, 0xc0, 0x4f, 0x23, 0xee, 0x00, 0x65, 0xd0, 0xcd,
	0x27, 0xd9, 0x5d, 0xb9, 0x2c, 0x58, 0x07, 0xc5, 0x5b, 0x68, 0xf5, 0xf7, 0x4a, 0x6e, 0xd6, 0x2c,
	0x44, 0xde, 0x81, 0xe4, 0x95, 0xc0, 0xef, 0xe6, 0x70, 0x34, 0x81, 0xe0, 0x56, 0x68, 0x67, 0xa9,
	0x37, 0x8a, 0xdb, 0xf3, 0x73, 0xcc, 0xd9, 0x56, 0x28, 0x46, 0x8f, 0x3e, 0x77, 0x80, 0x1e, 0x41,
	0x34, 0x33, 0x42, 0x99, 0xa7, 0xb2, 0x2a, 0xd0, 0xa9, 0xcf, 0xf7, 0x84, 0xcd, 0xda, 0xaf, 0x36,
	0xa2, 0x5a, 0xb3, 0xc0, 0x65, 0x77, 0x44, 0xa2, 0x20, 0xda, 0xed, 0xe9, 0x5b, 0x16, 0x8e, 0x21,
	0x44, 0xb1, 0x66, 0x1e, 0x6e, 0xbb, 0xd7, 0xd8, 0x36, 0xaf, 0x53, 0xed, 0x37, 0xfd, 0xcf, 0x6f,
	0x5e, 0x42, 0x60, 0xd5, 0xf4, 0x3f, 0x84, 0xd3, 0x4d, 0x35, 0x2f, 0x54, 0xfd, 0x1b, 0x6a, 0xf4,
	0xf5, 0x94, 0xa3, 0x77, 0x52, 0xd3, 0x74, 0x0c, 0xfd, 0x4c, 0x89, 0x72, 0xd5, 0x5a, 0xdf, 0xd6,
	0x6d, 0x7d, 0x73, 0x87, 0xac, 0xed, 0x7e, 0x7f, 0x2d, 0xc9, 0xaf, 0x94, 0x9c, 0x13, 0x7a, 0x03,
	0xb1, 0x6b, 0xb2, 0x9b, 0xfe, 0x87, 0x1d, 0xe6, 0x21, 0x9e, 0xfb, 0xc5, 0x47, 0x00, 0x00, 0x00,
	0xff, 0xff, 0x27, 0x8a, 0xa1, 0x14, 0x03, 0x03, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// StateClient is the client API for State service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type StateClient interface {
	DrainProcessState(ctx context.Context, opts ...grpc.CallOption) (State_DrainProcessStateClient, error)
	DrainPortState(ctx context.Context, opts ...grpc.CallOption) (State_DrainPortStateClient, error)
}

type stateClient struct {
	cc *grpc.ClientConn
}

func NewStateClient(cc *grpc.ClientConn) StateClient {
	return &stateClient{cc}
}

func (c *stateClient) DrainProcessState(ctx context.Context, opts ...grpc.CallOption) (State_DrainProcessStateClient, error) {
	stream, err := c.cc.NewStream(ctx, &_State_serviceDesc.Streams[0], "/state.State/DrainProcessState", opts...)
	if err != nil {
		return nil, err
	}
	x := &stateDrainProcessStateClient{stream}
	return x, nil
}

type State_DrainProcessStateClient interface {
	Send(*Command) error
	Recv() (*ProcessCollection, error)
	grpc.ClientStream
}

type stateDrainProcessStateClient struct {
	grpc.ClientStream
}

func (x *stateDrainProcessStateClient) Send(m *Command) error {
	return x.ClientStream.SendMsg(m)
}

func (x *stateDrainProcessStateClient) Recv() (*ProcessCollection, error) {
	m := new(ProcessCollection)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *stateClient) DrainPortState(ctx context.Context, opts ...grpc.CallOption) (State_DrainPortStateClient, error) {
	stream, err := c.cc.NewStream(ctx, &_State_serviceDesc.Streams[1], "/state.State/DrainPortState", opts...)
	if err != nil {
		return nil, err
	}
	x := &stateDrainPortStateClient{stream}
	return x, nil
}

type State_DrainPortStateClient interface {
	Send(*Command) error
	Recv() (*ProcessCollection, error)
	grpc.ClientStream
}

type stateDrainPortStateClient struct {
	grpc.ClientStream
}

func (x *stateDrainPortStateClient) Send(m *Command) error {
	return x.ClientStream.SendMsg(m)
}

func (x *stateDrainPortStateClient) Recv() (*ProcessCollection, error) {
	m := new(ProcessCollection)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// StateServer is the server API for State service.
type StateServer interface {
	DrainProcessState(State_DrainProcessStateServer) error
	DrainPortState(State_DrainPortStateServer) error
}

// UnimplementedStateServer can be embedded to have forward compatible implementations.
type UnimplementedStateServer struct {
}

func (*UnimplementedStateServer) DrainProcessState(srv State_DrainProcessStateServer) error {
	return status.Errorf(codes.Unimplemented, "method DrainProcessState not implemented")
}
func (*UnimplementedStateServer) DrainPortState(srv State_DrainPortStateServer) error {
	return status.Errorf(codes.Unimplemented, "method DrainPortState not implemented")
}

func RegisterStateServer(s *grpc.Server, srv StateServer) {
	s.RegisterService(&_State_serviceDesc, srv)
}

func _State_DrainProcessState_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(StateServer).DrainProcessState(&stateDrainProcessStateServer{stream})
}

type State_DrainProcessStateServer interface {
	Send(*ProcessCollection) error
	Recv() (*Command, error)
	grpc.ServerStream
}

type stateDrainProcessStateServer struct {
	grpc.ServerStream
}

func (x *stateDrainProcessStateServer) Send(m *ProcessCollection) error {
	return x.ServerStream.SendMsg(m)
}

func (x *stateDrainProcessStateServer) Recv() (*Command, error) {
	m := new(Command)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _State_DrainPortState_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(StateServer).DrainPortState(&stateDrainPortStateServer{stream})
}

type State_DrainPortStateServer interface {
	Send(*ProcessCollection) error
	Recv() (*Command, error)
	grpc.ServerStream
}

type stateDrainPortStateServer struct {
	grpc.ServerStream
}

func (x *stateDrainPortStateServer) Send(m *ProcessCollection) error {
	return x.ServerStream.SendMsg(m)
}

func (x *stateDrainPortStateServer) Recv() (*Command, error) {
	m := new(Command)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _State_serviceDesc = grpc.ServiceDesc{
	ServiceName: "state.State",
	HandlerType: (*StateServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "DrainProcessState",
			Handler:       _State_DrainProcessState_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
		{
			StreamName:    "DrainPortState",
			Handler:       _State_DrainPortState_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "proto/state.proto",
}
